<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.cloub.mapper.UndoLogMapper">

    <!-- 通用设置 -->
        <!-- 通用查询列 -->
        <sql id="Base_Column_List">
            branch_id, xid, context, rollback_info, log_status, log_created, log_modified
        </sql>

        <!-- 通用条件列 -->
        <sql id="UndoLogByCondition">
                    <if test="xid!=null and xid!=''">
                        AND xid = #{xid}
                    </if>
                    <if test="context!=null and context!=''">
                        AND context = #{context}
                    </if>
                    <if test="rollbackInfo!=null and rollbackInfo!=''">
                        AND rollback_info = #{rollbackInfo}
                    </if>
                    <if test="logStatus!=null and logStatus!=''">
                        AND log_status = #{logStatus}
                    </if>
                    <if test="logCreated!=null and logCreated!=''">
                        AND log_created = #{logCreated}
                    </if>
                    <if test="logModified!=null and logModified!=''">
                        AND log_modified = #{logModified}
                    </if>
        </sql>

        <!-- 通用设置列 -->
        <sql id="UndoLogSetColumns">
                    <if test="xid!=null and xid!=''">
                        xid = #{xid},
                    </if>
                    <if test="context!=null and context!=''">
                        context = #{context},
                    </if>
                    <if test="rollbackInfo!=null and rollbackInfo!=''">
                        rollback_info = #{rollbackInfo},
                    </if>
                    <if test="logStatus!=null and logStatus!=''">
                        log_status = #{logStatus},
                    </if>
                    <if test="logCreated!=null and logCreated!=''">
                        log_created = #{logCreated},
                    </if>
                    <if test="logModified!=null and logModified!=''">
                        log_modified = #{logModified},
                    </if>
        </sql>

        <!-- 通用查询映射结果 -->
        <resultMap id="UndoLogMap" type="com.atguigu.cloub.entity.UndoLog">
                    <id column="branch_id" property="branchId"/>
                    <result column="xid" property="xid"/>
                    <result column="context" property="context"/>
                    <result column="rollback_info" property="rollbackInfo" jdbcType="LONGVARBINARY" />
                    <result column="log_status" property="logStatus"/>
                    <result column="log_created" property="logCreated"/>
                    <result column="log_modified" property="logModified"/>
        </resultMap>

    <!-- 查询表undo_log所有信息 -->
    <select id="findAllUndoLog" resultMap="UndoLogMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM undo_log
    </select>

            <!-- 根据主键branchId查询表undo_log信息 -->
            <select id="findUndoLogBybranchId" resultMap="UndoLogMap">
                SELECT
                <include refid="Base_Column_List"/>
                FROM undo_log
                WHERE branch_id=#{branchId}
            </select>

    <!-- 根据条件查询表undo_log信息 -->
    <select id="findUndoLogByCondition" resultMap="UndoLogMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM undo_log
        WHERE 1=1
        <include refid="UndoLogByCondition" />
    </select>

            <!-- 根据主键branchId删除表undo_log信息 -->
            <delete id="deleteUndoLogBybranchId">
                DELETE FROM
                undo_log
                WHERE branch_id=#{branchId}
            </delete>

            <!-- 根据主键branchId更新表undo_log信息 -->
            <update id="updateUndoLogBybranchId" parameterType="com.atguigu.cloub.entity.UndoLog">
                UPDATE undo_log
                <set>
                    <include refid="UndoLogSetColumns"/>
                </set>
                WHERE
                branch_id=#{branchId}
            </update>

            <!-- 新增表undo_log信息 -->
            <insert id="addUndoLog">
                INSERT INTO undo_log (
                    branch_id
                    ,xid
                    ,context
                    ,rollback_info
                    ,log_status
                    ,log_created
                    ,log_modified
                ) VALUES (
                    #{branchId}
                    ,#{xid}
                    ,#{context}
                    ,#{rollbackInfo}
                    ,#{logStatus}
                    ,#{logCreated}
                    ,#{logModified}
                )
            </insert>
</mapper>
