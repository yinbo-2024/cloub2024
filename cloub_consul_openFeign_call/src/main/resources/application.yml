server:
  port: 9004

spring:
  zipkin:
    base-url: http://localhost:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
  ##  数据源配置 ，不用可不用配
  #  datasource:
  #    type: com.alibaba.druid.pool.DruidDataSource # 设置类型为 DruidDataSource
  #    driver-class-name: com.mysql.jdbc.Driver # 数据库连接驱动
  #    url: jdbc:mysql://localhost:3306/db2024?useSSL=false&useUnicode=true&characterEncoding=UTF-8
  #    username: root
  #    password: root
  # 环境选择
#  profiles :
#    active :

# 断路器配置
# Resilience4j CircuitBreaker
# 按照次数:COUNT BASED 的例子
#6次访间中当执行方法的失败率达到50%时
#circuitBreaker将进入开启OPEN状态(保险丝跳闸断电)拒绝所有请求。
#等待5秒后，CircuitBregker将自动从开启OPEN状态过渡到半开HALE OPEN状态，
#允许一些请求通过以测试服务是否恢复正常。
#如还是异常circuitBreaker 将重新进入开启OPEN状态:
#如正常将进入关闭CLOSE闭合状态恢复正常处理请求。


#  断路器配置 -- 次数
#resilience4j:
#   #次数 魔板配置
#  circuitbreaker:
#    configs:
#      default:
#        #设置50%的调用失败时打开断路器，超过失败请求自分比circuitBreaker变为OPEN
#        failureRateThreshold: 50
#        # 滑动窗日的类型  次数统计
#        slidingWindowType: COUNT_BASED
#        #滑动窗口的大小配置COUNT BASED表示6个请求，配置TIME BASED表示6秒
#        slidingWindowSize: 6
#        #断路器计算失败率或授调用率之前所需的最小样本(每个滑动窗口周期)。
#        minimumNumberOfCalls: 6
#        #是否启用自动从开启状态过液到半开状念，默认值为true
#        automaticTransitionFromOpenToHalfOpenEnabled: true
#        #从OPEN型 HALF OPEN状态满要等待的时间 (从打开状态 -》半开状态  等待时间)
#        waitDurationInOpenState: 5s
#        #半开状念允许的最大请求数，默认值为10。
#        permittedNumberOfCallsInHalfOpenState: 2
#        recordExceptions:
#          - java.lang.Exception
#    instances:
#      cloub-consul-dao:
#        baseConfig: default
# # 断路器配置 --时间
#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        timeoutDuration: 10s
#  circuitbreaker:
#      configs:
#        default:
#          #设置50%的调用失败时打开断路器，超过失败请求自分比circuitBreaker变为OPEN
#          failureRateThreshold: 50
#          #慢调用时间闽值，高于这个闽值的视为慢调用并增加调用比例。
#          slowCallDurationThreshold: 2s
#          #调用百分比峰值，断路器把调用时间大于slowcallDurationThreshold，视为慢调用，当慢调用比例高于闽值，
#          slowCallRateThreshold: 30
#          # 滑动窗日的类型  次数统计
#          slidingWindowType: TIME_BASED
#          #滑动窗口的大小配置COUNT BASED表示6个请求，配置TIME BASED表示6秒
#          slidingWindowSize: 2
#          #断路器计算失败率或授调用率之前所需的最小样本(每个滑动窗口周期)。
#          minimumNumberOfCalls: 2
#          #是否启用自动从开启状态过液到半开状念，默认值为true
#          automaticTransitionFromOpenToHalfOpenEnabled: true
#          #从OPEN型 HALF OPEN状态满要等待的时间 (从打开状态 -》半开状态  等待时间)
#          waitDurationInOpenState: 5s
#          #半开状念允许的最大请求数，默认值为10。
#          permittedNumberOfCallsInHalfOpenState: 2
#          recordExceptions:
#            - java.lang.Exception
#      instances:
#        cloub-consul-dao:
#          baseConfig: default


####resilience4i bulkhead  舱壁隔离--信号量舱壁
#resilience4j:
#   bulkhead:
#     instances:
#       cloub-consul-dao:
#         baseConfig: default
#     configs:
#       default:
#         #隔离允许并发线程执行的最大数 maxConcurrentCalls
#          maxConcurrentCalls: 2
#         #当达到调用数量时，新的线程的阻塞时间，我只愿意等待1秒，过时不候进舱壁兜底fallback
#          maxWaitDuration: 1s
#   timelimiter:
#     configs:
#       default:
#         timeoutDuration: 20s


#  resilience4i bulkhead  舱壁隔离-- 固定线程池舱壁
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        #timelimiter默认限制远程1s，超过报错不好演示效果所以加上10秒
#        timeoutDuration: 10s
#  thread-pool-bulkhead:
#    configs:
#      default:
#        coreThreadPoolSize: 1
#        maxThreadPoolSize: 1
#        queueCapacity: 1
#    instances:
#      cloub-consul-dao:
#        baseConfig: default

####resilience4j ratelimiter 限流的例子
resilience4j:
  ratelimiter:
    configs:
      default:
        #在一次刷新周期内，允许执行的最大请求数1imitRefreshPeriod:1s
        # 限流器每隔 limttRefreshPeriod 刷新一次，
        # 将允许处理的最大请求数最重置为 limitForPeriodtimeout-duration:1
        #线程等待权限的默认等待时间
        limitForPeriod: 2
        limitRefreshPeriod: 1s
        timeoutDuration: 1
    instances:
      cloub-consul-dao:
        baseConfig: default


#mybatis 初始化 xml 位置
#mybatis:
#  mapper-locations: classpath:mapper/*.xml
#  type-aliases-package:
#  configuration:
#    map-underscore-to-camel-case: true